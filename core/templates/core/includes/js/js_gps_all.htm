{% load static %}
<!-- GPS Test category -->
<script
    src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBNIX6WrjQ6HgnfcI50Xb8ezhohFDeOE8s&libraries=visualization"></script>
<script>
    var markves = [];
    // dom is ready ...
    $(function () {
        // set your connect application key and username / password values below ...
        var APP_KEY = '66fe3c00-486a-4d1e-a201-ff47f5343198'
            , CONNECT_ROOT = 'https://connect.calamp.com'
            , username = 'jcamarillo'
            , password = 'prueba1CTC('
            , $message = $('.message');

        var contador = 0;

        function authenticate() {
            var url = '/connect/services/login?useAuthToken=true&username=' + username + '&password=' + password
                , request = connectRequest(url, 'POST', 'html')
                , promise = request.then(function (response) {
                    $message.text('Retrieving User from Connect ...');
                    return connectRequest('/connect/services/users/currentUser');
                }, error);
            promise.then(retrieveDevices, error);

            setTimeout(function () {
                authenticate();
                if (markves.length > 0) {
                    markves.forEach(function (el) {
                        console.log('si entra');
                        el.setMap(null);
                    });
                    markves = [];
                }
            }, 30000);
            //authenticate();
        };

        // retrieve devices for the authenticated user's default account ...
        function retrieveDevices() {
            //var account = response.response.results[0].user.account;
            //contador = contador + 1;
            //console.log
            // GPS List 
            $.ajax({
                url: '{% url "administrador:get_ajax_lista_gpsdevices" %}',
                data: { 'cliente': 1 },
                datatype: 'json',
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                success: function (result) {

                    console.log('GPS list');
                    mArray = JSON.parse(result);

                    mArray.forEach(function (key) {
                        connectRequest(key.fields.deviceesn);
                    });

                } // end success
            });   // end of ajax

            //connectRequest('/connect/results/events/device/' + $('div#gpsid').text() + '?idType=ESN&v=2.0&pg=1&pgsize=10').then(renderEvents, error);
            setTimeout(function () {
                retrieveDevices();
                if (markves.length > 0) {
                    markves.forEach(function (el) {
                        console.log('si entra');
                        el.setMap(null);
                    });
                    markves = [];
                }
            }, 20000);

        };

        // upon recieving the response for the events request, render the events ...
        function renderEvents(response) {
            ////console.log('AQui');

            //console.log(response.response);
            //console.log(response.response.results[0].avlEvent.deviceEsn);
            if (response.data == null) {
                return;
            }
            var t = response.data.units;



            let devLat = t[0].lat;
            let devLng = t[0].lng;
            if (!map) {
                map = new google.maps.Map(document.getElementById("mapa"), {
                    center: {
                        lat: 31.6892055,
                        lng: -106.4280307
                    },
                    zoom: 11
                });

            }




            var contentString = '<div id="content">' +
                '<div id="siteNotice">' +
                '</div>' +
                '<h6 id="firstHeading" class="bgp-color-azul">' + t[0].unit_id + '</h6>';

            var infowindow = new google.maps.InfoWindow({
                content: contentString
            });


            console.log('Posiciones');
            console.log(devLat, devLng);
            if (t[0].icon === "person") {
                marker = new google.maps.Marker({
                    'position': new google.maps.LatLng(devLat, devLng),
                    'title': "",
                    'icon': { url: "{% static 'core/assets/images/where-ico-marker.png' %}" },
                });
            }
            else {
                marker = new google.maps.Marker({
                    'position': new google.maps.LatLng(devLat, devLng),
                    'title': "",
                    'icon': { url: "{% static 'core/assets/images/vehiculo.png' %}" },
                });
            }

            function existsImage(strImagen) {
                dImage = "";
                if (strImagen != "" && strImagen != null && strImagen != '/media/') {
                    dImage = '<img class="img-fluid" width=100 src="' + strImagen + '"  />'
                }
                return dImage;
            }

            google.maps.event.addListener(marker, 'click', (function (marker) {
                return function () {

                    $.ajax({
                        url: '{% url "administrador:ajax_mov_info_esn" %}',
                        data: { 'esn': t[0].unit_id },
                        datatype: 'json',
                        type: 'GET',
                        contentType: 'application/json; charset=utf-8',
                        success: function (esn) {
                            console.log('Info de Movimiento ESN ...');
                            console.log(esn);
                            if (esn.id != 0) {
                                var contentString = '<div id="content" style="width: 95%">' +
                                    '<div id="siteNotice">' +
                                    '</div>' +
                                    '<h6 id="firstHeading"><a href="/backstage/movimientos/' + esn.id + '" class="bgp-color-azul mayus" title="Ver Movimiento">ESN: ' + esn.esn + '</a></h6>' +
                                    '<div id="bodyContent">' +
                                    '<div class="row">' +
                                    '<div class="col-md-9">' +
                                    '<table class="mb-0 table table-striped goleft"> <tbody><tr><td>Nombre</td><td>' + esn.nombre + '</td></tr><tr><td>Matr&iacute;cula</td><td class="mayus">' + esn.matricula + '</td></tr><tr><td>Destino</td><td><div class="truncate">' + esn.destino + '</div></td></tr><tr><td>Empresa</td><td class="mayus">' + esn.emp_transp + '</td></tr></tbody></table>' +
                                    '</div>' + // col-md-8
                                    '<div class="col-md-3">' +
                                    '<div class="text-center">' +
                                    existsImage(esn.foto) +
                                    '</div>' +
                                    '</div>' + // col-md-4
                                    '</div>' + // Row
                                    '</div>' + // BodyContent
                                    '</div>';

                                infowindow.setContent(contentString);
                                infowindow.open(map, marker);

                            } else {
                                var contentString = 'SIN MOVIMIENTO ACTIVO.';
                                infowindow.setContent(contentString);
                                infowindow.open(map, marker);
                            }
                        }
                    });




                }
            })(marker));


            //marker.setMap(null);
            marker.setMap(map);
            markves.push(marker);

        };

        // an error occurred, display the error message ...
        function error(err) {
            $message.text('An Error occurred: ' + err.statusText);
        };

        /**
         * Provides a simple utility for creating $.ajax requests specific to Connect.
         *
         * @param  url  A valid, Connect service endpoint / URL
         * @param  method The HTTP method of the given service; either GET, or POST, defaults to POST
         * @param  type The content type of the request, defaults to json
         */
        function connectRequest(deviceesn) {
            $.ajax({
                url: "{% url 'api:gps_list' %}?key=3e042f5db343f51d8e1896cd23e76ba1bf7ffc9b&unit_id=" + deviceesn,
                type: 'GET',
                headers: {
                    'Content-Type': 'application/json;charset=utf-8',
                },
                crossDomain: true,
                dataType: 'json',
                async: true,
                success: function (result) {
                    console.log(result);
                    renderEvents(result);
                },
                error: function (e) {
                    console.log(e);
                }
            });
        };

        let map;
        retrieveDevices();
    });
</script>