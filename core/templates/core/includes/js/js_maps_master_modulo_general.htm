{% load static %}
<!-- JS for Maps Master Modulo General -->
<script>    

    var map, heatmap, infowindow;
    var markers = [];
    var markves = [];
    var mapss, directionsService;      
 
    function initMap() {
        map = new google.maps.Map(document.getElementById('map1'), {
            zoom: 11,
            center: {lat: 31.6740425, lng: -106.4181677},
            mapTypeId: 'satellite'
        });
            

        infoWindow = new google.maps.InfoWindow;
        
        var markers = setMarkers(map);

        heatmap = new google.maps.visualization.HeatmapLayer({
            data: getPoints(),
            map: map
        });     

        /*D & D*/
       
        // set your connect application key and username / password values below ...
        var APP_KEY      = '66fe3c00-486a-4d1e-a201-ff47f5343198'
          , CONNECT_ROOT = 'https://connect.calamp.com'
          , username     = 'jcamarillo'
          , password     = 'prueba1CTC('
          , $message     = $('.message');

          var contador = 0;


        function authenticate(){		
            var url     = '/connect/services/login?useAuthToken=true&username=' + username + '&password=' + password
              , request = connectRequest(url, 'POST', 'html')
              , promise = request.then(function(response) {
                    $message.text('Retrieving User from Connect ...');
                    return connectRequest('/connect/services/users/currentUser');
              }, error);
            promise.then(retrieveDevices, error);            
            setTimeout(function(){ authenticate(); 
            if (markves.length > 0){
                markves.forEach(function(el) { 
                    console.log('si entra') ;
                    el.setMap(null);  
                 }); 
                 markves = [];
            } 

            }, 20000);            
            //authenticate();
        };

        // retrieve devices for the authenticated user's default account ...
        function retrieveDevices(response) {                    
            var account = response.response.results[0].user.account;
            contador = contador + 1;
            // GPS List
            $.ajax({
                url:  '{% url "administrador:get_ajax_lista_gpsdevices" %}',
                data: { 'cliente': 1},
                datatype: 'json',
                type: 'GET',
                contentType: 'application/json; charset=utf-8',            
                success: function (result) {         
                                                    
                    mArray = JSON.parse(result);                               

                    mArray.forEach(function(key) {      
                        connectRequest('/connect/results/events/device/' + key.fields.deviceesn + '?idType=ESN&v=2.0&pg=1&pgsize=10').then(renderEvents, error);
                    });  
            
                } // end success
            });   // end of ajax
            
            
        };

        // upon recieving the response for the events request, render the events ...
        function renderEvents(response) {
          
            var t = response.response.results;
           

            
            
            let devLat = response.response.results[0].avlEvent.address.addressLatitude;
            let devLng = response.response.results[0].avlEvent.address.addressLongitude;

            if (!mapss) {
                mapss = new google.maps.Map(document.getElementById("mapa"), {
                    center: {
                    lat: 31.6892055,
                    lng: -106.4280307 
                    },
                    zoom: 11
                });             
            }     

            var contentString = '<div id="content">'+
                '<div id="siteNotice">'+
                '</div>'+
                '<h6 id="firstHeading" class="bgp-color-azul">'+ response.response.results[0].avlEvent.deviceEsn+'</h6>'+
                '<div id="bodyContent">'+
                '<p>'+ response.response.results[0].avlEvent.address.street + ', ' + response.response.results[0].avlEvent.address.city + ', ' + response.response.results[0].avlEvent.address.state + '</p></div>'+
                '</div>';

            var infowindow = new google.maps.InfoWindow({
                content: contentString
            });
            
            
            marker = new google.maps.Marker({                
                'position' : new google.maps.LatLng(devLat, devLng),
                'title': response.response.results[0].avlEvent.address.street,                
                'icon': { url: "{% static 'core/assets/images/vehiculo.png' %}"},
            });    
                 
            function existsImage(strImagen) {
                dImage = "";                
                if (strImagen != "" && strImagen != null && strImagen != '/media/') {
                    dImage = '<img class="img-fluid" width=100 src="' + strImagen + '"  />'
                }                
                return dImage;
            }

            google.maps.event.addListener(marker, 'click', (function (marker) {
                return function () {                                             
                    
                    $.ajax({
                        url:  '{% url "administrador:ajax_mov_info_esn" %}',
                        data: { 'esn': response.response.results[0].avlEvent.deviceEsn },
                        datatype: 'json',
                        type: 'GET',
                        contentType: 'application/json; charset=utf-8',            
                        success: function (esn) {
                            if (esn.id != 0) {
                            var contentString = '<div id="content" style="width: 95%">'+
                                '<div id="siteNotice">' +
                                '</div>' +
                                '<h6 id="firstHeading"><a href="/backstage/movimientos/'+esn.id+'" class="bgp-color-azul mayus" title="Ver Movimiento">ESN: '+esn.esn+'</a></h6>' +
                                '<div id="bodyContent">' +
                                '<div class="row">' +
                                '<div class="col-md-9">' +
                                '<table class="mb-0 table table-striped goleft"> <tbody><tr><td>Nombre</td><td>' + esn.nombre + '</td></tr><tr><td>Matr&iacute;cula</td><td class="mayus">' + esn.matricula+ '</td></tr><tr><td>Destino</td><td><div class="truncate">' + esn.destino + '</div></td></tr><tr><td>Empresa</td><td class="mayus">' + esn.emp_transp + '</td></tr><tr><td>Ubicaci√≥n</td><td><div class="truncate">'+ response.response.results[0].avlEvent.address.street + ', ' + response.response.results[0].avlEvent.address.city + ', ' + response.response.results[0].avlEvent.address.state + '</div></td></tr></tbody></table>' +                
                                '</div>' + // col-md-8
                                '<div class="col-md-3">' +
                                '<div class="text-center">'+
                                existsImage(esn.foto) +                
                                '</div>' +
                                '</div>' + // col-md-4
                                '</div>' + // Row
                                '</div>' + // BodyContent
                                '</div>';                            
                            
                                infowindow.setContent(contentString);
                                infowindow.open(mapss, marker);
                            }else{
                                var contentString='SIN MOVIMIENTO ACTIVO.';
                                infowindow.setContent(contentString);
                                infowindow.open(map, marker);
                            } 
                        
                        }
                    });  

                   


                }
            })(marker));             
            
            marker.setMap(mapss);  
            markves.push(marker);          
        };

        // an error occurred, display the error message ...
        function error(err){
            $message.text('An Error occurred: ' + err.statusText);
        };

        /**
         * Provides a simple utility for creating $.ajax requests specific to Connect.
         *
         * @param  url  A valid, Connect service endpoint / URL
         * @param  method The HTTP method of the given service; either GET, or POST, defaults to POST
         * @param  type The content type of the request, defaults to json
         */
        function connectRequest(url, method, type) {
            return $.ajax(CONNECT_ROOT + url, {
                'headers': {'calamp-services-app': APP_KEY}
              , 'type': method || 'GET'
              , 'dataType': type || 'json'
              , 'crossDomain' : true
              , 'xhrFields': {
                  'withCredentials': true
                }
            });
        };

        let mapss;
        authenticate();        
        // Fin de D&D Management
    }    

    function handleLocationError(browserHasGeolocation, infoWindow, pos) {
        infoWindow.setPosition(pos);
        infoWindow.setContent(browserHasGeolocation ?
                                'Error: The Geolocation service failed.' :
                                'Error: Your browser doesn\'t support geolocation.');
        infoWindow.open(map);
    }

    function toggleHeatmap() {
        heatmap.setMap(heatmap.getMap() ? null : map);
    }     

    function changeRadius() {
        heatmap.set('radius', heatmap.get('radius') ? null : 20);        
    }

    function changeOpacity() {
        heatmap.set('opacity', heatmap.get('opacity') ? null : 0.2);
    }

    function changeMarkers() {        
        toggleMarkers(markers);
    }

    function toggleMarkers(markers) {
        // Loop through all markers and hide each of them
        for (var i = 0; i < markers.length; i++) {
            var marker = markers[i];
            marker.visible ? marker.setVisible(false) : marker.setVisible(true);
            //marker.setVisible(false);
        }        
    }   

      // Heatmap data: 500 Points
    function getPoints() {
        return [
            {% for o in incidentes %}
            new google.maps.LatLng({{ o.lat}}, {{ o.lng }}),                
            {% endfor %}                    
        ];
    }

    function smoothZoom (map, level, cnt, mode) {
		//alert('Count: ' + cnt + 'and Max: ' + level);

		// If mode is zoom in
		if(mode == true) {

			if (cnt >= level) {
				return;
			}
			else {
				var z = google.maps.event.addListener(map, 'zoom_changed', function(event){
					google.maps.event.removeListener(z);
					smoothZoom(map, level, cnt + 1, true);
				});
				setTimeout(function(){map.setZoom(cnt)}, 50);
			}
		} else {
			if (cnt <= level) {
				return;
			}
			else {
				var z = google.maps.event.addListener(map, 'zoom_changed', function(event) {
					google.maps.event.removeListener(z);
					smoothZoom(map, level, cnt - 1, false);
				});
				setTimeout(function(){map.setZoom(cnt)}, 50);
			}
		}
    }

    function goUbicacion(lugar) {
        var vLugar = 'Ubicaci√≥n seleccionada';
        var vzoom = 0;
        var latitude  = 0;
        var longitude = 0;
        var whereMarker = null;

        if (lugar == 'usa_east') {
            latitude  =  36.5522;
            longitude =  -83.9171817;
            vLugar = 'Estados Unidos Este';
            vzoom = 6;            
        }  else if (lugar == 'global') {
            latitude  =  24.6110255;
            longitude = -42.8441299;
            vLugar = 'Vista Global';
            vzoom = 2.75;
        } else if (lugar == 'la') {
            latitude  =  15.2985681;
            longitude =  -78.6551153;
            vLugar = 'Am√©rica Latina';
            vzoom = 4;
        } else if (lugar == 'juarez') {
            latitude  =  31.6874405;
            longitude =  -106.4300477;
            vLugar = 'Ciudad Ju√°rez';
            vzoom = 12;
        } else if (lugar == 'benitojuarez') {
            latitude  = 30.1523153;
            longitude = -106.8905766;
            vLugar = 'Benito Ju√°rez';
            vzoom = 12;
        } else if (lugar == 'europa') {
            latitude  =   52.0930382;
            longitude =  11.3800946;
            vLugar = 'Europa';
            vzoom = 5;
        } else if (lugar == 'asia') {
            latitude  =  33.2888155;
            longitude =  113.5219767;
            vLugar = 'Asia';
            vzoom = 4;
        } else if (lugar == 'oceania') {
            latitude  =  -30.7058591;
            longitude =  143.8021268;
            vLugar = 'Ocean√≠a';
            vzoom = 5;
        }         

        whereMarker = new google.maps.Marker({
            zoom: vzoom,
            position: new google.maps.LatLng(latitude, longitude),
            title: vLugar,
            icon: "{% static 'core/assets/images/where-ico-marker.png' %}",
            map: map,
        });
        map.panTo(whereMarker.getPosition());
        //smoothZoom(map, vzoom, map.getZoom(), true);
        map.setZoom(vzoom);
    }

    function coberturaModoAleatorioOptima(bottom, top) {
        return Math.floor( Math.random() * ( 1 + top - bottom ) ) + bottom;
    }

    function setMarkers(map) {
         var circle;
        // Adds markers to the map.
        
        // Shapes define the clickable region of the icon. The type defines an HTML
        // <area> element 'poly' which traces out a polygon as a series of X,Y points.
        // The final coordinate closes the poly by connecting to the first coordinate.
        var shape = {
            coords: [1, 1, 1, 47, 30, 47, 30, 1],
            type: 'poly'
        };
    
        /*var iconos = { 
            'homicidio'         : { 'img': "{% static 'core/assets/images/icons/delincuenciales-color/homicidio.png' %}" },
            'carjacking'        : { 'img': "{% static 'core/assets/images/icons/delincuenciales-color/carjacking.png' %}" },
            'asalto_transeuntes': { 'img': "{% static 'core/assets/images/icons/delincuenciales-color/transeuntes.png' %}" },
            'casa_habitacion'   : { 'img': "{% static 'core/assets/images/icons/delincuenciales-color/casa-habitacion.png' %}" },
            'hotel'             : { 'img': "{% static 'core/assets/images/icons/delincuenciales-color/hotel.png' %}" },
            'aeropuerto'        : { 'img': "{% static 'core/assets/images/icons/delincuenciales-color/aeropuerto.png' %}" },
            'autopartes'        : { 'img': "{% static 'core/assets/images/icons/delincuenciales-color/auto-partes.png' %}" },
            'secuestro'         : { 'img': "{% static 'core/assets/images/icons/delincuenciales-color/secuestro.png' %}" },            
            'lesiones'          : { 'img': "{% static 'core/assets/images/icons/delincuenciales-color/lesiones.png' %}" },            
            'robo_vehiculo'     : { 'img': "{% static 'core/assets/images/icons/delincuenciales-color/carjacking.png' %}" },            
            'narcomenudeo'      : { 'img': "{% static 'core/assets/images/icons/delincuenciales-color/narcomenudeo.png' %}" },            
            'violencia_familiar': { 'img': "{% static 'core/assets/images/icons/delincuenciales-color/secuestro.png' %}" },            
        };  */

        var iconoss = { 
        {% for tipo in tipo_incidentes %}  
        '{{ tipo.alias }}': { 'nombre': "{{ tipo.nombre }}", 'img': "/media/{{ tipo.icono }}" }, 
        {% endfor %}   
        };             

        var czindex = 500;           
    
        {% for p in incidentes %}
    
            var title = '{{ p.tipo }}';            
            
            if (title == 'asalto_transeuntes') {
                title = 'Asalto a Transeuntes';
            } else if (title == 'robo_vehiculo') {
                title = 'Robo de Veh√≠culo';
            }

            //
            var tipo_inci = "{{ p.tipo|stringformat:"s" }}";
            if (title != 'robo-vehiculo' && title != 'asalto-a-negocios' && title != 'violacion' && title != 'feminicidio' && title != 'auto-partes' && title != 'transeuntes' && title != 'extorsion' && title != 'robo-casa' && title != 'violencia-familiar')  {
                var marker = new google.maps.Marker({
                    position: {lat: {{ p.lat}}, lng: {{ p.lng }} },
                    map: map,
                    icon: iconoss[tipo_inci].img,
                    shape: shape, 
                    title: title.toUpperCase(),
                    zIndex: czindex
                });    
            }
    
            var url_noticia = '{{p.url_noticia}}';
    
            marker.infowindow = new google.maps.InfoWindow({
                content: '<h3 class="infoh3"><b>' + '{{ p.desc }}</h3><hr/><h6><span class="infoh6">' + title.toUpperCase() + ':</span><br/><p class="infop">{{ p.direccion }}, {{ p.ciudad }}, {{ p.estado }}, {{ p.pais }} | Fecha: {{ p.fecha }}</p><hr/></h6><a href="'+url_noticia+'" data-id="{{ p.id }}" target="_blank" class="hoverme mb-2 mr-2 btn btn-light">Ver Incidente Relacionado</a>'
            });

            marker.addListener('click', function() {
                this.infowindow.open(map, this);
            });           
    
            markers.push(marker);  
            ++czindex;
        {% endfor %}  
    
        var ico_plantas = {             
            'optimo': { 'img': "{% static 'core/assets/images/yazaki/yazaki-marker.png' %}" },
            'relevante': { 'img': "{% static 'core/assets/images/alert-icon-plant.gif' %}" },
        }; 
    
        // Visualizaci√≥n de plantas de cliente
    
        var czindex = 900, vplantStatus;   
    
        {% for planta in plantas %}      
            var pnombre = '{{ planta.nombre }}';           
            
            vplantStatus = '{{ planta.status }}';
    
            var marker = new google.maps.Marker({
                position: {lat: {{ planta.lat}}, lng: {{ planta.lng }} },
                map: map,
                icon: ico_plantas.{{ planta.status }}.img,
                shape: shape,
                title: pnombre.toUpperCase(),
                zIndex: czindex
            });

           

            circle = new google.maps.Circle({
                map: map,
                radius: 2000,
                fillColor: '#8EE5EE',
                strokeColor: '#50A6C2'
            });

            circle.bindTo('center', marker, 'position');



            var estado_planta = '<span class="bgp-color-verde">√ìptimo</span>';
    
            var plantaAlias = "{{planta.alias}}";
            var plantaSlug  = "{{planta.slug}}";            
    
            if ( plantaSlug == '' ) {
                plantaSlug = '#'
            } else {
                plantaSlug = "";
            }           
    
            var nivelCobertura = 90;
    
            
            marker.addListener('click', function() {
                this.infowindow.open(map, this);
            });                
            
        {% endfor %}  
        
        return markers;
    }   

    jQuery( document ).ready(function() {
        jQuery('.hoverme').mouseenter(function(){
            jQuery('#lista_incidentes').hide();
        }); 
        jQuery('.hoverme').mouseleave(function(){
            jQuery('#lista_incidentes').show();
        });       
    });
    
</script>  

<script async defer
    src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBNIX6WrjQ6HgnfcI50Xb8ezhohFDeOE8s&libraries=visualization&callback=initMap">
</script>

